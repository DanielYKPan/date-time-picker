import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnInit } from '@angular/core';
import { OwlDateTimeIntl } from './date-time-picker-intl.service';
import { DateTimeAdapter } from './adapter/date-time-adapter.class';
export declare class OwlTimerComponent<T> implements OnInit {
    private ngZone;
    private elmRef;
    private pickerIntl;
    private cdRef;
    private dateTimeAdapter;
    private _pickerMoment;
    pickerMoment: T;
    private _minDateTime;
    minDateTime: T | null;
    private _maxDateTime;
    maxDateTime: T | null;
    private isPM;
    showSecondsTimer: boolean;
    hour12Timer: boolean;
    stepHour: number;
    stepMinute: number;
    stepSecond: number;
    readonly hourValue: number;
    readonly hourBoxValue: number;
    readonly minuteValue: number;
    readonly secondValue: number;
    readonly upHourButtonLabel: string;
    readonly downHourButtonLabel: string;
    readonly upMinuteButtonLabel: string;
    readonly downMinuteButtonLabel: string;
    readonly upSecondButtonLabel: string;
    readonly downSecondButtonLabel: string;
    readonly hour12ButtonLabel: string;
    selectedChange: EventEmitter<T>;
    readonly owlDTTimerClass: boolean;
    readonly owlDTTimeTabIndex: number;
    constructor(ngZone: NgZone, elmRef: ElementRef, pickerIntl: OwlDateTimeIntl, cdRef: ChangeDetectorRef, dateTimeAdapter: DateTimeAdapter<T>);
    ngOnInit(): void;
    focus(): void;
    setHourValueViaInput(hours: number): void;
    setHourValue(hours: number): void;
    setMinuteValue(minutes: number): void;
    setSecondValue(seconds: number): void;
    setMeridiem(event: any): void;
    upHourEnabled(): boolean;
    downHourEnabled(): boolean;
    upMinuteEnabled(): boolean;
    downMinuteEnabled(): boolean;
    upSecondEnabled(): boolean;
    downSecondEnabled(): boolean;
    private compareHours;
    private compareMinutes;
    private compareSeconds;
    private getValidDate;
}
