import { AfterContentInit, ChangeDetectorRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';
import { DateTimeAdapter } from './adapter/date-time-adapter.class';
import { OwlDateTimeFormats } from './adapter/date-time-format.class';
import { SelectMode } from './date-time.class';
export declare class OwlYearViewComponent<T> implements OnInit, AfterContentInit, OnDestroy {
    private cdRef;
    private dateTimeAdapter;
    private dateTimeFormats;
    private _selectMode;
    selectMode: SelectMode;
    private _selected;
    selected: T | null;
    private _selecteds;
    selecteds: T[];
    private _pickerMoment;
    pickerMoment: T;
    private _dateFilter;
    dateFilter: (date: T) => boolean;
    private _minDate;
    minDate: T | null;
    private _maxDate;
    maxDate: T | null;
    private readonly monthNames;
    private _months;
    readonly months: CalendarCell[][];
    readonly activeCell: number;
    readonly isInSingleMode: boolean;
    readonly isInRangeMode: boolean;
    private localeSub;
    private initiated;
    todayMonth: number | null;
    selectedMonths: number[];
    readonly change: EventEmitter<T>;
    readonly monthSelected: EventEmitter<T>;
    readonly pickerMomentChange: EventEmitter<T>;
    readonly keyboardEnter: EventEmitter<any>;
    calendarBodyElm: OwlCalendarBodyComponent;
    readonly owlDTCalendarView: boolean;
    constructor(cdRef: ChangeDetectorRef, dateTimeAdapter: DateTimeAdapter<T>, dateTimeFormats: OwlDateTimeFormats);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    selectCalendarCell(cell: CalendarCell): void;
    private selectMonth;
    handleCalendarKeydown(event: KeyboardEvent): void;
    private generateMonthList;
    private createMonthCell;
    private isMonthEnabled;
    private getMonthInCurrentYear;
    private setSelectedMonths;
    private hasSameYear;
    private getValidDate;
    private focusActiveCell;
}
